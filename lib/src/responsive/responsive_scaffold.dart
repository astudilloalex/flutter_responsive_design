import 'package:flutter/material.dart';
import 'package:responsive_design/src/responsive/responsive.dart';
import 'package:responsive_design/src/responsive/responsive_app_bar.dart';
import 'package:responsive_design/src/widgets/auto_drawer.dart';

class ResponsiveScaffold extends StatelessWidget {
  /// Controls whether a drawer should be created with the app bar actions.
  ///
  /// An automatic Drawer is only generated when one is not provided,
  /// furthermore, it will not be displayed on large screens,
  /// even if the [showDrawerInLargeScreen] option is true.
  final bool autoGenerateDrawer;

  /// The primary content of the scaffold.
  final Widget? body;

  /// A panel displayed to the side of the [body], often hidden on mobile
  /// devices.
  final Widget? drawer;

  /// An app bar to display at the top of the scaffold.
  final ResponsiveAppBar? responsiveAppBar;

  /// Controls whether the drawer should display on large screens.
  final bool showDrawerInLargeScreen;

  /// Controls whether the drawer should display on medium screens.
  final bool showDrawerInMediumScreen;

  ResponsiveScaffold({
    this.autoGenerateDrawer = false,
    this.body,
    this.drawer,
    this.responsiveAppBar,
    this.showDrawerInLargeScreen = false,
    this.showDrawerInMediumScreen = false,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: responsiveAppBar,
      drawer: _drawer(context),
      body: body,
    );
  }

  Widget? _drawer(BuildContext context) {
    if (drawer != null) {
      if (Responsive.isLargeScreen(context) && showDrawerInLargeScreen)
        return drawer;
      if (Responsive.isMediumScreen(context) && showDrawerInMediumScreen)
        return drawer;
      if (Responsive.isSmallScreen(context)) return drawer;
    } else if (responsiveAppBar != null && responsiveAppBar!.actions != null) {
      return autoGenerateDrawer ? _autoDrawer(context) : null;
    }
  }

  AutoDrawer? _autoDrawer(BuildContext context) {
    final List<Widget> widgets = [];
    if (Responsive.isMediumScreen(context) && showDrawerInMediumScreen) {
      widgets.addAll(responsiveAppBar!.actions!.where((act) =>
          !act.showInSmallScreen && !act.showInMediumScreen ||
          !act.showInMediumScreen));
      if (widgets.isNotEmpty)
        return AutoDrawer(
          children: widgets,
        );
    }
    if (Responsive.isSmallScreen(context)) {
      widgets.addAll(
          responsiveAppBar!.actions!.where((act) => !act.showInSmallScreen));
      if (widgets.isNotEmpty)
        return AutoDrawer(
          children: widgets,
        );
    }
  }
}
